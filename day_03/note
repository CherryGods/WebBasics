==============================================================================
JSP的概念:
    JavaServerPage:Java服务端网页，是一个HTML文件且可以编写Java代码
    JSP页面中的静态HTML内容称之为JSP模板元素
Jsp的９个隐含对象:
    PageContext=pageContext:
        页面的上下文，是PageContext的一个对象.可以从当前对象获取其他８个隐含对象，也可以从中获取到其他的页面信息。
        学习自定义标签时用的多
    HttpSession=session:
        代表浏览器和服务器的一个对话. 是HttpSession的一个对象，这个在学完Jsp再详细学习
    ServletContext=application:
        代表当前Web应用，是ServletContext的对象,说明能获取当前Web应用的初始化参数等..
    ServletConfig=config:
        是ServletConfig对象，是当前JSP对应的Servlet对象，开发的时候几乎不使用。若需要访问当前jsp配置的初始化参数，
        需要通过映射的地址才可以访问。
        映射：
            <servlet>
                <servlet-name>helloJsp</servlet-name>
                <jsp-file>/hello.jsp</jsp-file>
                <init-param>
                    <param-name>test</param-name>
                    <param-value>testValue</param-value>
                </init-param>
            </servlet>
            <servlet-mapping>
                <servlet-name>helloJsp</servlet-name>
                <url-pattern>/helloJsp</url-pattern>
            </servlet-mapping>
    JspWriter=out:
        是一个JspWriter对象，经常调用out.println(),可以直接把字符串打印到浏览器上
    Object page:
        只是一当前Jsp对应的Servlet对象的引用，但Object类型只能调用Object的方法，开发中几乎不使用。
    HttpServletRequest=request:　
    HttpServletResponse=response: 在Jsp页面中几乎不用这个对象的方法
    Exception exception:
        在特定情况下才可以使用，例如在error.jsp声明<%@ page isErrorPage="true" %>
    属性的作用于的范围从小到大:
    pageContext,request,session,application,out,response,config,page
==============================================================================
JSP表达式:
    提供了一个Java变量或表达式的计算结果输出到客户端的简化方式，它将要输出的变量或表达式
    直接封装在<%%>或<%=>之中
==============================================================================
JSP脚本片段:
    多个脚本片段可以相互进行访问
   <%
      String age = request.getParameter("age");
      if(Integer.valueOf(age)>=18){
   %>
       成年
   <%
      }else{
   %>
      未成年
   <%
      }
   %>
==============================================================================
JSP声明:
    可以讲Java代码在<%!%>内封装到_jspService之外，基本不使用
    <%!
        void test(){}
    %>
==============================================================================
JSP中注释的格式:
    <%!--JSP注释--%>
        阻止Java代码运行
    <!--HTML注释-->
==============================================================================
JSP中和属性相关的方法
Object getAttribute(String name):获取指定的属性
Enumeration<String> getAttributeNames():获取所有属性的名字所组成的Enumeration数组
removeAttribute(String name):移除指定的属性
void setAttribute(String name):设置属性
pageContext,request,session,application对象都有
==============================================================================
域对象
    pageContext: 属性的作用范围仅限于当前ＪＳＰ页面.
    request: 属性的作用范围仅限于同一个请求.
    session:　属性的作用范围仅限于一次会话：浏览器打开知道关闭称之为一次会话(在此期间会话不失效)
    application: 属性的作用范围限于当前ＷＥＢ应用，是范围最大的树形作
    用范围，只要在一处设置属性，在其他的JSP或Servlet中都可以获取到
==============================================================================
转发和重定向

==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
==============================================================================
